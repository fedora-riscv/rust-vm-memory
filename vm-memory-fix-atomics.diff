From 53facb4724592f7629cd0c56cb3d2d5031ca4b1f Mon Sep 17 00:00:00 2001
From: Sergio Lopez <slp@redhat.com>
Date: Tue, 31 May 2022 18:20:38 +0200
Subject: [PATCH] atomic: enable 64 bit atomics on ppc64le and s390x

Add ppc64le and s390x to the list of arches that support AtomicI64 and
AtomicU64.

Signed-off-by: Sergio Lopez <slp@redhat.com>
---
 src/atomic_integer.rs | 14 ++++++++++++--
 src/bytes.rs          | 14 ++++++++++++--
 2 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/src/atomic_integer.rs b/src/atomic_integer.rs
index 5dbfd09..5916473 100644
--- a/src/atomic_integer.rs
+++ b/src/atomic_integer.rs
@@ -53,13 +53,23 @@ macro_rules! impl_atomic_integer_ops {
 impl_atomic_integer_ops!(std::sync::atomic::AtomicI8, i8);
 impl_atomic_integer_ops!(std::sync::atomic::AtomicI16, i16);
 impl_atomic_integer_ops!(std::sync::atomic::AtomicI32, i32);
-#[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
+#[cfg(any(
+    target_arch = "x86_64",
+    target_arch = "aarch64",
+    target_arch = "powerpc64",
+    target_arch = "s390x"
+))]
 impl_atomic_integer_ops!(std::sync::atomic::AtomicI64, i64);
 
 impl_atomic_integer_ops!(std::sync::atomic::AtomicU8, u8);
 impl_atomic_integer_ops!(std::sync::atomic::AtomicU16, u16);
 impl_atomic_integer_ops!(std::sync::atomic::AtomicU32, u32);
-#[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
+#[cfg(any(
+    target_arch = "x86_64",
+    target_arch = "aarch64",
+    target_arch = "powerpc64",
+    target_arch = "s390x"
+))]
 impl_atomic_integer_ops!(std::sync::atomic::AtomicU64, u64);
 
 impl_atomic_integer_ops!(std::sync::atomic::AtomicIsize, isize);
diff --git a/src/bytes.rs b/src/bytes.rs
index 7079943..6cfb849 100644
--- a/src/bytes.rs
+++ b/src/bytes.rs
@@ -181,13 +181,23 @@ macro_rules! impl_atomic_access {
 impl_atomic_access!(i8, std::sync::atomic::AtomicI8);
 impl_atomic_access!(i16, std::sync::atomic::AtomicI16);
 impl_atomic_access!(i32, std::sync::atomic::AtomicI32);
-#[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
+#[cfg(any(
+    target_arch = "x86_64",
+    target_arch = "aarch64",
+    target_arch = "powerpc64",
+    target_arch = "s390x"
+))]
 impl_atomic_access!(i64, std::sync::atomic::AtomicI64);
 
 impl_atomic_access!(u8, std::sync::atomic::AtomicU8);
 impl_atomic_access!(u16, std::sync::atomic::AtomicU16);
 impl_atomic_access!(u32, std::sync::atomic::AtomicU32);
-#[cfg(any(target_arch = "x86_64", target_arch = "aarch64"))]
+#[cfg(any(
+    target_arch = "x86_64",
+    target_arch = "aarch64",
+    target_arch = "powerpc64",
+    target_arch = "s390x"
+))]
 impl_atomic_access!(u64, std::sync::atomic::AtomicU64);
 
 impl_atomic_access!(isize, std::sync::atomic::AtomicIsize);
-- 
2.36.1

